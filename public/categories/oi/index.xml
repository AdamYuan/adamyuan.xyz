<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OI on AdamYuan-&gt;Blog</title>
    <link>https://adamyuan.xyz/categories/oi/</link>
    <description>Recent content in OI on AdamYuan-&gt;Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>2020 AdamYuan.</copyright>
    <lastBuildDate>Thu, 27 Sep 2018 21:21:54 +0800</lastBuildDate><atom:link href="https://adamyuan.xyz/categories/oi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>二逼平衡树(splay / vector &#43; 线段树)</title>
      <link>https://adamyuan.xyz/post/2b-pin-heng-shu/</link>
      <pubDate>Thu, 27 Sep 2018 21:21:54 +0800</pubDate>
      
      <guid>https://adamyuan.xyz/post/2b-pin-heng-shu/</guid>
      <description>题目概述 您需要写一种数据结构（可参考题目标题），来维护一个有序数列，其中需要提供以下操作：
 查询k在区间内的排名 查询区间内排名为k的值 修改某一位值上的数值 查询k在区间内的前驱（前驱定义为严格小于x，且最大的数，若不存在输出-2147483647） 查询k在区间内的后继（后继定义为严格大于x，且最小的数，若不存在输出2147483647）  基本思路 这是一道树套树（线段树套平衡树）的模板题，下面讲解一下5个操作的写法：
 分别查询区间对应的每个平衡树中k元素的排名，再相加 这个是最难想的，其实就是二分答案。。。可以线段树里再维护最大最小值加速二分 就是插入+删除 分别查询每颗平衡树中k的前驱，取最大 分别查询每颗平衡树中k的后继，取最小  操作3的复杂度为 $$\log^3(n)$$，其它为 $$\log^2(n)$$
吐槽 这题竟然可以线段树套std::vector水过，然而splay却会TLE 3个点。。。
代码 std::vector版（AC） #include &amp;lt;cstdio&amp;gt;#include &amp;lt;algorithm&amp;gt;#include &amp;lt;vector&amp;gt; #define N 50005 #define MINV -2147483647 #define MAXV 2147483647  int arr[N]; inline int vec_query_rank(const std::vector&amp;lt;int&amp;gt; &amp;amp;vec, int x) { return std::lower_bound(vec.begin(), vec.end(), x) - vec.begin(); } inline int vec_query_prev(const std::vector&amp;lt;int&amp;gt; &amp;amp;vec, int x) { std::vector&amp;lt;int&amp;gt;::const_iterator i = std::lower_bound(vec.begin(), vec.end(), x); if(i == vec.</description>
    </item>
    
    <item>
      <title>文本编辑器editor(splay)</title>
      <link>https://adamyuan.xyz/post/wenbenbianjiqi-editor/</link>
      <pubDate>Thu, 20 Sep 2018 21:26:53 +0800</pubDate>
      
      <guid>https://adamyuan.xyz/post/wenbenbianjiqi-editor/</guid>
      <description>&lt;h1 id=&#34;题目概述&#34;&gt;题目概述&lt;/h1&gt;
&lt;p&gt;实现一个文本编辑器，实现下列功能：&lt;br&gt;
&lt;img src=&#34;https://adamyuan.xyz/img/wenbenbianjiqi-editor/1.gif&#34; alt=&#34;img1&#34;&gt;&lt;br&gt;
例子：&lt;br&gt;
&lt;img src=&#34;https://adamyuan.xyz/img/wenbenbianjiqi-editor/2.gif&#34; alt=&#34;img1&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;基本思路&#34;&gt;基本思路&lt;/h1&gt;
&lt;p&gt;（pos代表光标位置）
这题的思路十分简单粗暴，其中基本的操作是通过伸展树的splay操作得到代表一个区间的子树，对于区间[l, r]，将第l-1号节点splay成为根节点，将第r+1号节点splay成为根节点的右儿子，则根节点右儿子的左子树便是所需的子树。&lt;br&gt;
对于插入操作，可以先处理出[pos+1, pos]这个空区间（l-1 = pos, r+1 = pos+1），根节点右儿子的左子树必然为空，将其初始化为新字符串即可。&lt;br&gt;
对于删除和旋转操作，都需处理出[pos+1, pos+n]。删除操作可直接删除相应子树，旋转操作打上延迟标记然后pushdown。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>poj2104静态区间第k大(主席树)</title>
      <link>https://adamyuan.xyz/post/static-kth-number-hjt/</link>
      <pubDate>Thu, 30 Aug 2018 14:54:03 +0800</pubDate>
      
      <guid>https://adamyuan.xyz/post/static-kth-number-hjt/</guid>
      <description>&lt;h1 id=&#34;题目概述&#34;&gt;题目概述&lt;/h1&gt;
&lt;p&gt;给定一个数列(1 - 100000)，m次询问(1 - 5000)，每个询问包含l r k，输出区间[l&amp;hellip;r]中第k大的数。&lt;/p&gt;
&lt;h1 id=&#34;基本思路&#34;&gt;基本思路&lt;/h1&gt;
&lt;p&gt;首先我们将数列离散化。如果可以构造出任意区间的权值线段树(即线段树的下标代表区间中包含的数的值，例如数列1, 2, 2, 2, 3, 3, 4构成的权值线段树最下层为1, 3, 2, 1)，便能轻松二分出答案，同时区间[l&amp;hellip;r]的权值线段树可以由区间[1&amp;hellip;r]线段树中的值减去[1&amp;hellip;l-1]得到，所以想到构造n颗前缀权值线段树。&lt;br&gt;
不过暴力建树空间复杂度太大，必然会mle，这时就需要用到主席树了。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
